;;; Automatically generated on Mon Jul 28 07:50:31 2014
;;; Invoked by mofy@mofy using 24.3.1
(setq-default session-file-alist '(("~/doTest/test.sv" 51 1 1 nil nil 52 (overwrite-mode)) ("~/doTest/minixml.c" 596 nil 1 nil nil nil (overwrite-mode)) ("~/doTest/test.cc" 174 nil 1 nil nil 172 (overwrite-mode)) ("~/gem5/src/Doxyfile" 24 nil 1 nil nil nil (overwrite-mode)) ("~/doTest/test.sh" 14 15 1 nil nil 14 (overwrite-mode)) ("~/linux_copy/notes/2014.html" 1 nil 1 nil nil 26302 (overwrite-mode)) ("~/linux_copy/notes/2013_10.html" 1 nil 1 nil nil 53384 (overwrite-mode)) ("~/.notes/2014.org" 6014 20193 1 nil nil 20194 (overwrite-mode)) ("~/gem5/src/arch/arm/linux/process.cc" 30341 30328 1 nil nil 30355 (overwrite-mode)) ("~/gem5/src/sim/syscall_emul.cc" 10907 10544 1 nil nil 10908 (overwrite-mode)) ("~/gem5/src/sim/syscall_emul.hh" 8992 8935 1 nil nil 8993 (overwrite-mode)) ("~/.notes/plans/2014.01.20.muse" 25 nil 1 nil nil 47 (overwrite-mode)) ("~/.notes/plans/TaskPool.muse" 131 nil 1 nil nil 97 (overwrite-mode)) ("~/.notes/plans/2014.01.19.muse" 10 nil 1 nil nil 10 (overwrite-mode)) ("~/.notes/plans/Reading.muse" 10 219 1 nil nil 186 (overwrite-mode)) ("~/.notes/plans/R.muse" 68 nil 1 nil nil 71 (overwrite-mode)) ("~/.notes/plans/2014.01.18.muse" 10 57 1 nil nil 12 (overwrite-mode)) ("~/.notes/plans/2014.01.27.muse" 10 nil 1 nil nil 10 (overwrite-mode)) ("~/.notes/plans/2014.01.22.muse" 10 nil 1 nil nil 12 (overwrite-mode))))
(setq-default file-name-history '("/home/mofy/.emacs.d/init-face-settings.el" "~/doTest/tt/minixml.c" "~/doTest/test.cc" "/home/mofy/doTest/tt/minixml.c" "/home/mofy/doTest/test.cc" "/home/mofy/doTest/minixml.c" "/home/mofy/.emacs.d/README.md" "/home/mofy/doTest/test.sv" "/home/mofy/doTest/#test.sv#" "/home/mofy/gem5/src/Doxyfile" "/usr/include/ace/os_include/net/os_if.h" "/usr/include/ace/Asynch_IO.h" "/usr/include/ace/OS_NS_sys_socket.h" "/usr/include/ace/os_include/arpa/os_inet.h" "/usr/include/ace/Proactor.h" "~/software/ACE_wrappers/examples/APG/Proactor/HA_Proactive_Status.h" "/home/mofy/software/ACE_wrappers/examples/APG/Proactor/HA_Proactive_Status.cpp" "/usr/include/ace/streams.h" "/usr/include/ace/OS_NS_time.h" "/home/mofy/software/ACE_wrappers/examples/APG/Reactor/Timer_State_Data.cpp" "/home/mofy/software/ACE_wrappers/examples/APG/Reactor/Timers.cpp" "/usr/include/ace/Task_T.h" "/usr/include/ace/Svc_Handler.h" "/usr/include/ace/OS_NS_unistd.h" "/usr/include/ace/TSS_Adapter.h" "/usr/include/ace/Thread_Semaphore.h" "/usr/include/ace/Semaphore.h" "/usr/include/ace/RW_Thread_Mutex.h" "/usr/include/ace/RW_Mutex.h" "/usr/include/ace/Null_Semaphore.h"))
(setq-default buffer-name-history '("*ansi-term*" "*Ibuffer*" "*Messages*" "test.sv" "#test.sv#" "Doxyfile" "*terminal<1>*" "test.sh" "syscall_emul.cc" "process.cc • linux" "syscall_emul.hh" "process.cc • arm" "process.cc" "process.hh • x86" "unistd.h • asm-generic" "2014.01.20.muse" "*scratch*" "2014.01.19.muse" "*Remember*" "hello.s" "hello.c" "2014.org" "hdlcd.cc" "2013_10.org" "elf_object.cc" ".todo-do" "books_readed.org" "*Calendar*" \.\.\.))
(setq-default command-history '((describe-font "") (mouse-set-font "-misc-fixed-medium-r-normal--20-200-75-75-c-100-iso8859-1") (find-file "/home/mofy/.emacs.d/init-face-settings.el") (switch-to-buffer "minixml.c") (dired "/home/mofy/.emacs.d/") (switch-to-buffer "test.cc") (find-file "/home/mofy/doTest/tt/minixml.c") (find-file "/home/mofy/doTest/test.cc") (find-file "/home/mofy/doTest/minixml.c") (find-file "/home/mofy/.emacs.d/README.md") (switch-to-buffer "*ansi-term*") (evil-delete 30 37 (quote line) nil nil) (switch-to-buffer "test.sv") (evil-delete 1 47 (quote line) nil nil) (evil-delete 1 30 (quote line) nil nil) (evil-delete 11 24 (quote line) nil nil) (evil-delete 23 33 (quote line) nil nil) (evil-delete 23 28 (quote line) nil nil) (evil-delete 23 34 (quote line) nil nil) (find-file "/home/mofy/doTest/test.sv") (evil-delete 1 7 (quote line) nil nil) (evil-delete 1 10 (quote line) nil nil) (verilog-mode) (evil-delete 1 4 (quote line) nil nil) (evil-record-macro 24) (switch-to-buffer "*Ibuffer*") (ibuffer-jump-to-buffer "*scratch*") (set-fill-column 0) (switch-to-buffer "*Messages*") (kill-buffer "test.sv") (kill-buffer "#test.sv#")))
(setq-default evil-ex-history '(#("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1))))
(setq-default extended-command-history '("plan" "org-mode"))
(setq-default find-tag-history '(#("path" 0 1 (c-is-sws t fontified t) 1 4 (fontified t)) #("FuncPtr" 0 1 (face font-lock-type-face c-is-sws t fontified t) 1 6 (face font-lock-type-face fontified t) 6 7 (face font-lock-type-face c-type c-decl-id-start fontified t)) #("SyscallDesc" 0 1 (c-is-sws t fontified t) 1 11 (fontified t)) #("getSyscallArg" 0 13 (fontified t)) #("sim_fd" 0 6 (fontified t)) #("VERSION_RESETV" 0 14 (fontified t)) #("checkViolations" 0 15 (face font-lock-function-name-face fontified t)) #("depCheckShift" 0 13 (fontified t)) #("forwardOldRegs" 0 14 (fontified t)) #("initiateAcc" 0 11 (face font-lock-function-name-face fontified t)) #("BaseO3DynInst" 0 13 (face font-lock-constant-face fontified t)) #("isSquashed" 0 10 (fontified t)) #("SQEntry" 0 7 (fontified t)) #("loadTail" 0 8 (fontified t)) #("thread" 0 6 (fontified t)) \.\.\.))
(setq-default helm-c-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-c-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf (require (quote recentf)) (or recentf-mode (recentf-mode 1)))) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda (candidate) (helm-set-pattern (expand-file-name candidate)) (with-helm-after-update-hook (helm-exit-minibuffer))) ("Find file in helm" lambda (candidate) (helm-set-pattern (expand-file-name candidate))))))
(setq-default helm-c-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default helm-ff-history '("/home/mofy/doTest/" "/home/yx/gem5/src/sim/" "/home/yx/.notes/" "/home/yx/gem5-0b2e590c85be/build/ARM/dev/arm/" "/home/yx/gem5/gem5-stable/build/ARM/" "/home/yx/gem5/gem5-stable/build/ARM/cpu/o3/" "/home/yx/gem5/gem5-stable/src/cpu/o3/" "/home/yx/" "/home/yx/gem5/gem5-stable/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates lambda nil (mapcar (quote prin1-to-string) command-history)) (type . sexp)))
(setq-default helm-source-ff-file-name-history '((name . "File name history") (init lambda nil (when helm-ff-file-name-history-use-recentf (require (quote recentf)) (or recentf-mode (recentf-mode 1)))) (candidates lambda nil (if helm-ff-file-name-history-use-recentf recentf-list file-name-history)) (persistent-action . ignore) (filtered-candidate-transformer . helm-file-name-history-transformer) (action ("Find file" lambda (candidate) (helm-set-pattern (expand-file-name candidate)) (with-helm-after-update-hook (helm-exit-minibuffer))) ("Find file in helm" lambda (candidate) (helm-set-pattern (expand-file-name candidate))))))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (type . file)))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-buffer-history '(#("minixml.c" 0 9 (face ido-virtual)) #("test.cc" 0 7 (face ido-virtual)) "*ansi-term*" #("test.sv" 0 7 (face ido-virtual)) "*Ibuffer*" "*scratch*" "*Messages*" "#test.sv#" "Doxyfile" "*terminal<1>*" "test.sh" "syscall_emul.cc" "process.cc • linux" "syscall_emul.hh" "process.cc • arm" "process.cc" "process.hh • x86" "unistd.h • asm-generic" "2014.01.20.muse" "2014.01.19.muse" "*Remember*" "hello.s" "hello.c" "2014.org" #("intregs.hh" 0 10 (face ido-virtual)) nil "hdlcd.cc" "2013_10.org" "elf_object.cc" ".todo-do"))
(setq-default ido-file-history '("init-face-settings.el" "." "minixml.c" "test.cc" "README.md" "test.sv" "#test.sv#" "Doxyfile" "HA_Proactive_Status.cpp" "Timer_State_Data.cpp" "Timers.cpp" "HAStatus.cpp" "ClientService.h" "Client.h" "Client.cpp" "test.sh" "2014.org" "2013_10.org" "process.cc" "syscall_emul.cc" "syscall_emul.hh" "faults.cc" "TAGS" "stat.c" "signalfd.c" "unistd.h" "2014.01.20.muse" "hello.s" "hello.c"))
(setq-default minibuffer-history '("describe-font" "mouse-set-font" "w3m" "i" "DUT" "mofy" "name" "verilog-mode" "0" "auto-complete" "org-export-as-html" "visit-tags-table" "20" "planner-task-delegated" "plan" "planner-task-pending" "planner-deadline-add" "dead line learn" "dead line" "planner-goto-today" "planner-cyclic-create-tasks-maybe" "planner-id-add-task-id-to-all" "remember" "planner-mode" "22" "18" "planner-edit-task-description" "19" "planner-copy-or-move-region" "planner-update-task"))
(setq-default muse-project-page-history '("2014.01.19" "2014.01.22" "2014.01.27" "Reading" "2014.01.20" "2014.01.18"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-read-date-history '("   " "30    " "19    " "20    "))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default smex-history '(mouse-set-font cd 5x5 all arp dbx dig))
(setq-default yes-or-no-p-history '("yes"))
